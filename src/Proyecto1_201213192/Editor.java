package Proyecto1_201213192;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

//importar analizador
import Analizador.nodo;
import Analizador.ParseException;
import Analizador.analizador;
import Analizador.NodoError;
//otras cosas
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Hashtable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hboiton
 */
public class Editor extends javax.swing.JFrame {

    /**
     * Creates new form Editor
     */
    
    public PanelEditor panel;
    public ImageIcon icon ;
    public JFileChooser file;
    public File abre;
    public FileReader archivos;
    public BufferedReader lee;
    public   FileNameExtensionFilter filtro ;
    Hashtable<String,nodoTabla> tablaSimbolos;
    ArrayList<nodoLienzo> clasesLienzo;
    ArrayList<NodoError> errores;
    analizarArbol pasada1;
    int aux = 1;
    public Editor() {
        initComponents();
        icon = new ImageIcon("src/iconos/dibujo2.png");
        filtro =new FileNameExtensionFilter("Archivo lienzo", "lz");
        iniciarPanel();
        tablaSimbolos=new Hashtable<String,nodoTabla>();
        clasesLienzo=new ArrayList<nodoLienzo>();
        errores=new ArrayList<NodoError>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        compilar = new javax.swing.JButton();
        debbug = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        Btn_Errores = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        ContendorPaneles = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        abrir = new javax.swing.JMenuItem();
        nuevo = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        guardarcomo = new javax.swing.JMenuItem();
        Salir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        tablasimbolosmenu = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        compilar.setBackground(java.awt.SystemColor.controlDkShadow);
        compilar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/correr.png"))); // NOI18N
        compilar.setToolTipText("");
        compilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compilarActionPerformed(evt);
            }
        });

        debbug.setBackground(java.awt.SystemColor.controlDkShadow);
        debbug.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/debbug.png"))); // NOI18N

        jLabel1.setText("Velocidad de debbug");

        jLabel2.setText("Errores");

        jLabel3.setText("Debbug");

        jLabel4.setText("Compilar");

        Btn_Errores.setBackground(java.awt.SystemColor.controlDkShadow);
        Btn_Errores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/error.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(compilar)
                            .addComponent(jLabel4))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(debbug)
                                .addGap(30, 30, 30)
                                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Btn_Errores)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel2))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(jLabel1)))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(compilar)
                            .addComponent(debbug))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)))
                    .addComponent(Btn_Errores)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContendorPaneles)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ContendorPaneles, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
        );

        jMenu1.setText("Archivo");

        abrir.setBackground(java.awt.Color.gray);
        abrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/open.png"))); // NOI18N
        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        jMenu1.add(abrir);

        nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo.png"))); // NOI18N
        nuevo.setText("Nuevo");
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });
        jMenu1.add(nuevo);

        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        guardar.setText("Guarda");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        jMenu1.add(guardar);

        guardarcomo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar como.png"))); // NOI18N
        guardarcomo.setText("Guarda Como");
        guardarcomo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarcomoActionPerformed(evt);
            }
        });
        jMenu1.add(guardarcomo);

        Salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/salir.png"))); // NOI18N
        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        jMenu1.add(Salir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Herramientas");

        tablasimbolosmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/tablasimbolos.png"))); // NOI18N
        tablasimbolosmenu.setText("Ver tabla de simbolos");
        tablasimbolosmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tablasimbolosmenuActionPerformed(evt);
            }
        });
        jMenu2.add(tablasimbolosmenu);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Errores");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 public  void iniciarPanel(){
      panel = new PanelEditor();
     this.ContendorPaneles.addTab("nuevo", icon, panel);
    char mama='1';
    String a="'d'";
    int ad=a.length();
    mama=a.charAt(1);
    a=mama+"";
    
    int d=(int)mama;
   // int f=Integer.parseInt(""+mama);
    
     System.err.println(mama);
     System.err.println(d);
     //System.err.println(f);
 }
    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        // TODO add your handling code here:
        panel =new PanelEditor();
         this.ContendorPaneles.addTab("nuevo", icon, panel);
               
    }//GEN-LAST:event_nuevoActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        // TODO add your handling code here:
        System.exit(0);
        
    }//GEN-LAST:event_SalirActionPerformed

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        // TODO add your handling code here:
        //panel=(PanelEditor) ContendorPaneles.getSelectedComponent();
        panel =new PanelEditor();
        String aux="";   
        String texto="";
  try
  {
   /**llamamos el metodo que permite cargar la ventana*/
   file=new JFileChooser();
    file.setFileFilter(filtro);
   file.showOpenDialog(this);
 
   /**abrimos el archivo seleccionado*/
   abre=file.getSelectedFile();
   /**recorremos el archivo, lo leemos para plasmarlo
   *en el area de texto*/
   if(abre!=null)
   {     
      archivos=new FileReader(abre);
      lee=new BufferedReader(archivos);
      while((aux=lee.readLine())!=null)
      {
         texto+= aux+ "\n";
      }
         lee.close();
    }    
   }
   catch(IOException ex)
   {
     JOptionPane.showMessageDialog(null,ex+"" +
           "\nNo se ha encontrado el archivo",
                 "ADVERTENCIA!!!",JOptionPane.WARNING_MESSAGE);
    }
 
        
        
        
        panel.entrada.setText(texto);
        this.ContendorPaneles.addTab("nuevo", icon, panel);
        
        
    }//GEN-LAST:event_abrirActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
         panel=(PanelEditor) ContendorPaneles.getSelectedComponent();
         String nombre="";
         String texto=panel.entrada.getText();
         file=new JFileChooser();
         file.setFileFilter(filtro);
         file.showSaveDialog(this);
         File guarda =file.getSelectedFile();
         if(guarda !=null)
         {

             FileWriter  save=null;
             try {
                 /*guardamos el archivo y le damos el formato directamente,
                  * si queremos que se guarde en formato doc lo definimos como .doc*/
                 save = new FileWriter(guarda);
                 save.write(texto);
                 save.close();
                 JOptionPane.showMessageDialog(null,
                         "El archivo se a guardado Exitosamente",
                         "Información",JOptionPane.INFORMATION_MESSAGE);
             } catch (IOException ex) {
                 Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
             } finally {
                 try {
                     save.close();
                 } catch (IOException ex) {
                     Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
                 }
             }
         }    
         
         
    }//GEN-LAST:event_guardarActionPerformed

    private void guardarcomoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarcomoActionPerformed
        // TODO add your handling code here:
        panel=(PanelEditor) ContendorPaneles.getSelectedComponent();
         String nombre="";
         String texto=panel.entrada.getText();
         file=new JFileChooser();
         file.setFileFilter(filtro);
         file.showSaveDialog(this);
         File guarda =file.getSelectedFile();
         if(guarda !=null)
         {

             FileWriter  save=null;
             try {
                 /*guardamos el archivo y le damos el formato directamente,
                  * si queremos que se guarde en formato doc lo definimos como .doc*/
                 save = new FileWriter(guarda);
                 save.write(texto);
                 save.close();
                 JOptionPane.showMessageDialog(null,
                         "El archivo se a guardado Exitosamente",
                         "Información",JOptionPane.INFORMATION_MESSAGE);
             } catch (IOException ex) {
                 Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
             } finally {
                 try {
                     save.close();
                 } catch (IOException ex) {
                     Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
                 }
             }
         }    
         
        
        
    }//GEN-LAST:event_guardarcomoActionPerformed

    private void compilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compilarActionPerformed
        // TODO add your handling code here:
        panel=(PanelEditor) ContendorPaneles.getSelectedComponent();
        String cadena=panel.entrada.getText();
        try {
            compilar(cadena);
        } catch (IOException ex) {
            Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_compilarActionPerformed

    private void tablasimbolosmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tablasimbolosmenuActionPerformed
        // TODO add your handling code here:
        levantar("Tabla.html");
        
    }//GEN-LAST:event_tablasimbolosmenuActionPerformed
    
    void compilar(String s) throws IOException{
    
       analizador parser = new analizador(new java.io.StringReader(s));
        try {
            nodo raiz=(nodo)parser.S();
            aux=1;
            Graficar(recorrido(raiz ,0),"LienzoAST");
            verarbol();
            /*pasada1=new analizarArbol(raiz, tablaSimbolos,clasesLienzo,errores);
            pasada1.analizar();
            pasada1.escribirtabla();
           */
        }catch (ParseException | HeadlessException  e) {
                
                    System.out.println(e.getMessage());
        }
    
    }
    String recorrido(nodo raiz,int id){
            int var;
            String cuerpo="";
            for (nodo hijos : raiz.hijos) { 
               //if(hijos!=null){
                var = incremento();
                cuerpo += "\""+id+"_" + raiz.getEtiqueta() + "\"->\""+var+"_"+hijos.getEtiqueta()+"\""+"\n";
                cuerpo += recorrido(hijos, var)+"\n";   
                //cuerpo.equals(ABORT)
                //}
            }
          return cuerpo; 
    }
   int incremento()
    {
        return aux++;
    }
   
public void Graficar(String cadena,String cad){
        FileWriter fichero = null;
        PrintWriter pw = null;
        String nombre=cad;
        String archivo=nombre+".dot";
        try {
            fichero = new FileWriter(archivo);
            pw = new PrintWriter(fichero);
            pw.println("digraph G {node[shape=box, style=filled, color=Gray95]; edge[color=blue];rankdir=UD \n");
            pw.println(cadena);
            pw.println("\n}");
            fichero.close();
        } catch (Exception e) {
            System.out.println(e);
        } 
        try {
            String cmd = "dot -Tpng "+nombre+".dot -o AST.png"; //Comando de apagado en linux
            Runtime.getRuntime().exec(cmd); 
        } catch (IOException ioe) {
                System.out.println (ioe);
        }
    }
void verarbol(){
try
{
   /* directorio/ejecutable es el path del ejecutable y un nombre */
   String ruta=" cd /home/hboiton/NetBeansProjects/Proyecto1_201213192";
   //ruta="" 
   Process p = Runtime.getRuntime().exec ("viewnior AST.png");
}
catch (Exception e)
{
   /* Se lanza una excepción si no se encuentra en ejecutable o el fichero no es ejecutable. */
}



}
public void levantar(String path){
        try {

           File objetofile = new File (path);
           Desktop.getDesktop().open(objetofile);

            }catch (IOException ei) {}
    }
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Errores;
    private javax.swing.JTabbedPane ContendorPaneles;
    private javax.swing.JMenuItem Salir;
    private javax.swing.JMenuItem abrir;
    private javax.swing.JButton compilar;
    private javax.swing.JButton debbug;
    private javax.swing.JMenuItem guardar;
    private javax.swing.JMenuItem guardarcomo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JMenuItem nuevo;
    private javax.swing.JMenuItem tablasimbolosmenu;
    // End of variables declaration//GEN-END:variables
}
